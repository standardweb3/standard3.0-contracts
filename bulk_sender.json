{"language":"Solidity","sources":{"src/mock/BulkSender.sol":{"content":"pragma solidity ^0.8.24;\n\n\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n\ncontract BulkSender {\n    function bulkSendETH(address payable[] memory recipients, uint256[] memory values) external payable {\n        for (uint256 i = 0; i < recipients.length; i++)\n            recipients[i].transfer(values[i]);\n        uint256 balance = address(this).balance;\n        if (balance > 0)\n            payable(msg.sender).transfer(balance);\n    }\n\n    function bulkSendToken(IERC20 token, address[] memory recipients, uint256[] memory values) external {\n        uint256 total = 0;\n        for (uint256 i = 0; i < recipients.length; i++)\n            total += values[i];\n        require(token.transferFrom(msg.sender, address(this), total));\n        for (uint256 i = 0; i < recipients.length; i++)\n            require(token.transfer(recipients[i], values[i]));\n    }\n\n    function bulkSendTokenSimple(IERC20 token, address[] memory recipients, uint256[] memory values) external {\n        for (uint256 i = 0; i < recipients.length; i++)\n            require(token.transferFrom(msg.sender, recipients[i], values[i]));\n    }\n}"}},"settings":{"remappings":["ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@lukso/=node_modules/@lukso/","@erc725/=node_modules/@erc725/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"useLiteralContent":false,"bytecodeHash":"ipfs","appendCBOR":true},"outputSelection":{"*":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]}},"evmVersion":"paris","viaIR":false,"libraries":{}}}
